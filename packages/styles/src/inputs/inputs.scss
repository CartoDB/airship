/* stylelint-disable no-descending-specificity  */

@import "../core/_dev";

.as-input,
.as-textarea {
  box-sizing: border-box;
  width: 100%;
  min-height: 32px;
  padding: get-spacing(2);
  transition: all 0.3s;
  border: 0;
  border-radius: get-spacing(1);
  background: var(--as-color-ui-01, #{$color-ui-01});
  box-shadow: inset 0 0 0 1px var(--as-color-ui-04, #{$color-ui-04});
  color: var(--as-color-type-01, #{$color-type-01});
  font: $font-body;
  line-height: 1;

  &::placeholder {
    color: var(--as-color-ui-03, #{$color-ui-03});
  }

  &:hover {
    box-shadow: inset 0 0 0 1px var(--as-color-complementary, #{$color-complementary});
  }

  &:focus,
  &:hover:focus {
    outline: none;
    box-shadow: inset 0 0 0 2px var(--as-color-primary, #{$color-primary});
  }

  &:invalid {
    background: rgba($color-support-01, 0.12);
    box-shadow: inset 0 0 0 1px var(--as-color-support-01, #{$color-support-01});

    &:hover,
    &:focus,
    &:hover:focus {
      box-shadow: inset 0 0 0 1px var(--as-color-support-01, #{$color-support-01});
    }

    &::placeholder {
      color: rgba($color-type-01, 0.4);
    }
  }

  &:disabled {
    background: var(--as-color-ui-02, #{$color-ui-02});
    color: rgba($color-type-02, 0.4);

    &:hover,
    &:focus,
    &:hover:focus {
      box-shadow: inset 0 0 0 1px var(--as-color-ui-04, #{$color-ui-04});
    }

    &::placeholder {
      color: rgba($color-type-02, 0.4);
    }
  }

  &:read-only {
    background: var(--as-color-ui-02, #{$color-ui-02});
    color: var(--as-color-type-02, #{$color-type-02});

    &:hover,
    &:focus,
    &:hover:focus {
      box-shadow: inset 0 0 0 1px var(--as-color-ui-04, #{$color-ui-04});
    }

    &::placeholder {
      color: var(--as-color-type-02, #{$color-type-02});
    }
  }
}

.as-textarea {
  resize: none;
}
